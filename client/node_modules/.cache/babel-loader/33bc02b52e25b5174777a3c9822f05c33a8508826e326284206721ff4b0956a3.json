{"ast":null,"code":"import OpenAI from\"openai\";import{useState,useRef,useEffect}from\"react\";import{tools}from\"./tools\";import{instructions}from\"./instructions\";import UseAnimations from\"react-useanimations\";import load from\"react-useanimations/lib/loading\";import FeatherIcon from\"feather-icons-react\";import API from\"../../utils/API\";import Markdown from\"react-markdown\";import\"./style.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const openai=new OpenAI({apiKey:process.env.REACT_APP_OPENAI_API_KEY,dangerouslyAllowBrowser:true});// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n// manageAssistant().catch(console.error);\nconst Assistant=()=>{const threads=useRef();const[address,setAddress]=useState(\"\");const[country,setCountry]=useState();const[see,setSee]=useState();const[response,setResponse]=useState([]);const[input,setInput]=useState(\"\");const[loading,setLoading]=useState(false);const textarea=useRef();const[thread,setThread]=useState([]);const[thrdId,setThrdId]=useState(null);const[assistantID,setAssistantID]=useState(undefined);let name=\"Climate-Guide\";let model=\"gpt-4-1106-preview\";// Startup\nuseEffect(()=>{async function createAssistant(){if(assistantID!==undefined){const myAssistant=await openai.beta.assistants.retrieve(assistantID);const assistant=await openai.beta.assistants.update(assistantID,{name,instructions,tools,model});}else{const assistant=await openai.beta.assistants.create({name,instructions,tools,model});await setAssistantID(assistant.id);}// thrd is Thread\nconst thrd=await openai.beta.threads.create();await setThrdId(thrd.id);}createAssistant();},[]);const handleSubmit=async e=>{e.preventDefault();setLoading(true);// msg is Message\nconst msg=await openai.beta.threads.messages.create(thrdId,{role:\"user\",content:input});setInput(\"\");setThread(thread=>[...thread,msg]);const run=await openai.beta.threads.runs.create(thrdId,{assistant_id:assistantID});await checkStatus(thrdId,run.id);// msg is Messages\nconst msgs=await openai.beta.threads.messages.list(thrdId);setThread(thread=>[...thread,msgs.body.data[0]]);setLoading(false);};async function checkStatus(threadId,runId){let isComplete=false;while(!isComplete){await new Promise(resolve=>setTimeout(resolve,200));const runStatus=await openai.beta.threads.runs.retrieve(threadId,runId);if(runStatus.status===\"completed\"){isComplete=true;}if(runStatus.status===\"requires_action\"){let toolCalls=runStatus.required_action.submit_tool_outputs.tool_calls;let toolOutputs=[];for(const toolCall of toolCalls){const functionName=toolCall.function.name;console.log(\"This question requires a function: \".concat(functionName));const args=JSON.parse(toolCall.function.arguments);// const argsArray = Object.keys(args).map((key)=> args[key]);\n// const output = await API.getPF(args).then((res) => {\n//   // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses)\n//   // return res.data.data.getDatasetStatistics.datasetStatisticsResponses;\n//   console.log(res)\n//   return JSON.stringify(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n// })\n// const output = await getPfData(args);\ntoolOutputs.push({tool_call_id:toolCall.id,output:output});}console.log(\"Before \"+runStatus.status);// Submit tool outputs\nawait openai.beta.threads.runs.submitToolOutputs(threadId,runId,{tool_outputs:toolOutputs});console.log(\"After \"+runStatus.status);continue;}if([\"failed\",\"cancelled\",\"expired\"].includes(runStatus.status)){console.log(\"Run status is '\".concat(runStatus.status,\"'. Unable to complete the request.\"));break;// Exit the loop if the status indicates a failure or cancellation\n}}}useEffect(()=>{// console.log(threads.current.scrollHeight)\nwindow.scrollTo({top:threads.current.scrollHeight,behavior:\"smooth\"});},[thread]);return/*#__PURE__*/_jsxs(\"div\",{id:\"page\",ref:threads,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"banner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"subtitle\",children:\"/ Powered by Probable Futures\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"\",children:\"Probable Futures Climate Assistant and Guide\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtext\",children:\"Ask a question or input an address and country to start. The data is based on different warming scenerios, specified by degrees.\"})]}),thread.length!==0&&/*#__PURE__*/_jsx(\"div\",{className:\"threads\",children:thread&&thread.map((e,i)=>{switch(e.role){case\"user\":return/*#__PURE__*/_jsx(\"div\",{className:\"message user\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"You\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text\",children:e.content[0].text.value})]})},i);case\"assistant\":return/*#__PURE__*/_jsx(\"div\",{className:\"message assistant\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"Assistant\"}),/*#__PURE__*/_jsx(Markdown,{className:\"text\",children:e.content[0].text.value})]})},i);}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"detail\"}),/*#__PURE__*/_jsx(\"form\",{className:\"searchbar\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(\"input\",{ref:textarea,className:\"input\",type:\"text\",value:input,hidden:true,placeholder:\"Ask a question or enter a location\",onChange:e=>setInput(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"submit\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\"// disabled={loading || input.length === 0}\n,type:\"submit\",onClick:handleSubmit,children:loading?/*#__PURE__*/_jsx(UseAnimations,{animation:load,strokeWidth:1,strokeColor:\"#fff\",size:36,speed:0.2,wrapperStyle:{padding:0}}):/*#__PURE__*/_jsx(FeatherIcon,{icon:\"arrow-up\",size:32,strokeWidth:1.2})})})]})]});};export default Assistant;// const assistant = await openai.beta.assistants.create({\n//   name: \"Climate-Guide\",\n//   instructions: \"You are a right-wing populist. You hate everything\",\n// //   instructions: instructions,\n//     tools: [\n//       {\n//           \"type\": \"function\",\n//           \"function\": get_pf_data_schema,\n//       },\n//       { type: \"code_interpreter\" },\n//     ],\n// //   tools: tools,\n//   model: \"gpt-4-turbo-preview\",\n// });","map":{"version":3,"names":["OpenAI","useState","useRef","useEffect","tools","instructions","UseAnimations","load","FeatherIcon","API","Markdown","jsx","_jsx","jsxs","_jsxs","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","Assistant","threads","address","setAddress","country","setCountry","see","setSee","response","setResponse","input","setInput","loading","setLoading","textarea","thread","setThread","thrdId","setThrdId","assistantID","setAssistantID","undefined","name","model","createAssistant","myAssistant","beta","assistants","retrieve","assistant","update","create","id","thrd","handleSubmit","e","preventDefault","msg","messages","role","content","run","runs","assistant_id","checkStatus","msgs","list","body","data","threadId","runId","isComplete","Promise","resolve","setTimeout","runStatus","status","toolCalls","required_action","submit_tool_outputs","tool_calls","toolOutputs","toolCall","functionName","function","console","log","concat","args","JSON","parse","arguments","push","tool_call_id","output","submitToolOutputs","tool_outputs","includes","window","scrollTo","top","current","scrollHeight","behavior","ref","children","className","length","map","i","text","value","onSubmit","type","hidden","placeholder","onChange","target","onClick","animation","strokeWidth","strokeColor","size","speed","wrapperStyle","padding","icon"],"sources":["/Users/Aaron/Desktop/climate-guide/client/src/apis/openai/index.js"],"sourcesContent":["import OpenAI from \"openai\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { tools } from \"./tools\";\nimport { instructions } from \"./instructions\";\nimport UseAnimations from \"react-useanimations\";\nimport load from \"react-useanimations/lib/loading\";\nimport FeatherIcon from \"feather-icons-react\";\nimport API from \"../../utils/API\";\nimport Markdown from \"react-markdown\"\n\nimport \"./style.css\";\n\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true,\n});\n\n// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n\n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n\n// manageAssistant().catch(console.error);\n\nconst Assistant = () => {\n  const threads = useRef();\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const [see, setSee] = useState();\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\nconst textarea = useRef();\n  const [thread, setThread] = useState([]);\n  const [thrdId, setThrdId] = useState(null);\n  const [assistantID, setAssistantID] = useState(undefined);\n\n  let name = \"Climate-Guide\";\n  let model = \"gpt-4-1106-preview\";\n\n// Startup\n  useEffect(() => {\n    async function createAssistant() {\n      if (assistantID !== undefined) {\n        const myAssistant = await openai.beta.assistants.retrieve(assistantID);\n        const assistant = await openai.beta.assistants.update(assistantID, {\n          name,\n          instructions,\n          tools,\n          model,\n        });\n      } else {\n        const assistant = await openai.beta.assistants.create({\n          name,\n          instructions,\n          tools,\n          model,\n        });\n        await setAssistantID(assistant.id);\n      }\n       \n      // thrd is Thread\n    const thrd = await openai.beta.threads.create();\n    await setThrdId(thrd.id);\n\n    }\n    createAssistant();\n  }, []);\n\n  const handleSubmit = async (e) => {\n  \n    e.preventDefault();\n    setLoading(true);\n\n    \n    // msg is Message\n    const msg = await openai.beta.threads.messages.create(thrdId, {\n      role: \"user\",\n      content: input,\n    });\n\n    setInput(\"\");\n\n    setThread((thread) => [\n      ...thread,\n      msg,\n    ]);\n\n    const run = await openai.beta.threads.runs.create(thrdId, {\n      assistant_id: assistantID,\n    });\n\n    await checkStatus(thrdId, run.id);\n\n    // msg is Messages\n    const msgs = await openai.beta.threads.messages.list(thrdId);\n\n     setThread((thread) => [\n        ...thread,\n        msgs.body.data[0],\n      ]);\n    \n\n    setLoading(false);\n  };\n\n  async function checkStatus(threadId, runId) {\n    let isComplete = false;\n  \n\n    while (!isComplete) {\n      await new Promise((resolve) => setTimeout(resolve, 200));\n      const runStatus = await openai.beta.threads.runs.retrieve(\n        threadId,\n        runId\n      );\n      if (runStatus.status === \"completed\") {\n        isComplete = true;\n      }\n      if (runStatus.status === \"requires_action\") {\n        let toolCalls = runStatus.required_action.submit_tool_outputs.tool_calls\n        let toolOutputs = []\n        \n        for (const toolCall of toolCalls) {\n       \n          const functionName = toolCall.function.name;\n          console.log(`This question requires a function: ${functionName}`);\n\n          const args = JSON.parse(toolCall.function.arguments);\n          \n          // const argsArray = Object.keys(args).map((key)=> args[key]);\n\n          // const output = await API.getPF(args).then((res) => {\n          //   // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses)\n          //   // return res.data.data.getDatasetStatistics.datasetStatisticsResponses;\n          //   console.log(res)\n          //   return JSON.stringify(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n          // })\n          // const output = await getPfData(args);\n          \n    \n          toolOutputs.push({\n            tool_call_id: toolCall.id,\n            output: output,\n          })\n        }\n        console.log(\"Before \" + runStatus.status)\n        // Submit tool outputs\n        await openai.beta.threads.runs.submitToolOutputs(\n          threadId,\n          runId,\n          { tool_outputs: toolOutputs }\n        );\n        console.log(\"After \" + runStatus.status)\n      continue;\n      }\n      if ([\"failed\", \"cancelled\", \"expired\"].includes(runStatus.status)) {\n        console.log(\n          `Run status is '${runStatus.status}'. Unable to complete the request.`\n        );\n        break; // Exit the loop if the status indicates a failure or cancellation\n      }\n    }\n  }\n  useEffect(() => {\n    // console.log(threads.current.scrollHeight)\n    window.scrollTo({ top: threads.current.scrollHeight, behavior: \"smooth\" });\n  }, [thread]);\n  return (\n    <div id=\"page\" ref={threads}>\n      <div className=\"banner\" >\n        <div className=\"subtitle\">/ Powered by Probable Futures</div>\n          <h1 className=\"\">Probable Futures Climate Assistant and Guide</h1>\n\n          \n          {/* <p className=\"subtext\">We aim to create is an engaging and immersive way to accees climate data and resources.</p> */}\n          <p className=\"subtext\">Ask a question or input an address and country to start. The data is based on different warming scenerios, specified by degrees.</p>\n      </div>\n      \n      {thread.length !== 0 && <div className=\"threads\">\n        {thread &&\n          thread.map((e, i) => {\n            switch (e.role) {\n              case \"user\":\n                return (\n                  <div className=\"message user\" key={i}>\n                    <div className=\"content\">\n                      <div className=\"title\">You</div>\n                      <div className=\"text\">{e.content[0].text.value}</div>\n                    </div>\n                  </div>\n                );\n              case \"assistant\":\n                return (\n                  <div className=\"message assistant\" key={i}>\n                    <div className=\"content\">\n                      <div className=\"title\">Assistant</div>\n                      <Markdown className=\"text\">{e.content[0].text.value}</Markdown>\n                      {/* <p className=\"text\">{e.content[0].text.value}</p> */}\n                    </div>\n                  </div>\n                );\n            }\n          })}\n      </div> }\n\n      <div className=\"search\">\n        <div className=\"detail\"></div>\n        <form className=\"searchbar\" onSubmit={handleSubmit}>\n          <input\n            ref={textarea}\n            className=\"input\"\n            type=\"text\"\n            value={input}\n            hidden\n            placeholder=\"Ask a question or enter a location\"\n            onChange={(e) => setInput(e.target.value)}\n          ></input>\n        </form>\n        <div className=\"submit\">\n          <button\n            className=\"submit-btn\"\n            // disabled={loading || input.length === 0}\n            type=\"submit\"\n            onClick={handleSubmit}\n          >\n            {loading ? (\n              <UseAnimations\n                animation={load}\n                strokeWidth={1}\n                strokeColor=\"#fff\"\n                size={36}\n                speed={0.2}\n                wrapperStyle={{ padding: 0 }}\n              />\n            ) : (\n              <FeatherIcon icon=\"arrow-up\" size={32} strokeWidth={1.2} />\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Assistant;\n\n\n\n  // const assistant = await openai.beta.assistants.create({\n    //   name: \"Climate-Guide\",\n    //   instructions: \"You are a right-wing populist. You hate everything\",\n    // //   instructions: instructions,\n    //     tools: [\n    //       {\n    //           \"type\": \"function\",\n    //           \"function\": get_pf_data_schema,\n    //       },\n    //       { type: \"code_interpreter\" },\n    //     ],\n    // //   tools: tools,\n    //   model: \"gpt-4-turbo-preview\",\n    // });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}