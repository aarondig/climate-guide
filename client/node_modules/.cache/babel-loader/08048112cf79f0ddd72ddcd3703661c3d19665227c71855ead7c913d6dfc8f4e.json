{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/Desktop/climate-guide/client/src/apis/openai/index.js\",\n  _s = $RefreshSig$();\nimport OpenAI from \"openai\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { get_pf_data_schema } from \"./getdataschema\";\nimport { tools } from \"./tools\";\nimport { instructions } from \"./instructions\";\nimport UseAnimations from \"react-useanimations\";\nimport load from \"react-useanimations/lib/loading\";\nimport FeatherIcon, { arrowUp } from \"feather-icons-react\";\nimport API from \"../../utils/API\";\n\n// import getData from \"./getData\";\n\nimport \"./style.css\";\n// require('dotenv').config();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require(\"axios\");\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\n\n// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n\n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n\n// manageAssistant().catch(console.error);\n\nconst Assistant = () => {\n  _s();\n  const threads = useRef();\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const [see, setSee] = useState();\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const textarea = useRef();\n  const [thread, setThread] = useState([]);\n  const [thrdId, setThrdId] = useState(null);\n  const [assistantID, setAssistantID] = useState(undefined);\n  let name = \"Climate-Guide\";\n  let model = \"gpt-4-1106-preview\";\n\n  // Startup\n  useEffect(() => {\n    async function createAssistant() {\n      if (assistantID !== undefined) {\n        const myAssistant = await openai.beta.assistants.retrieve(assistantID);\n        const assistant = await openai.beta.assistants.update(assistantID, {\n          name,\n          instructions,\n          tools,\n          model\n        });\n      } else {\n        const assistant = await openai.beta.assistants.create({\n          name,\n          instructions,\n          tools,\n          model\n        });\n        await setAssistantID(assistant.id);\n      }\n\n      // thrd is Thread\n      const thrd = await openai.beta.threads.create();\n      await setThrdId(thrd.id);\n    }\n    createAssistant();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    // msg is Message\n    const msg = await openai.beta.threads.messages.create(thrdId, {\n      role: \"user\",\n      content: input\n    });\n    setInput(\"\");\n    setThread(thread => [...thread, msg]);\n    const run = await openai.beta.threads.runs.create(thrdId, {\n      assistant_id: assistantID\n    });\n    await checkStatus(thrdId, run.id);\n\n    // msg is Messages\n    const msgs = await openai.beta.threads.messages.list(thrdId);\n    setThread(thread => [...thread, msgs.body.data[0]]);\n    setLoading(false);\n  };\n  async function checkStatus(threadId, runId) {\n    let isComplete = false;\n    while (!isComplete) {\n      await new Promise(resolve => setTimeout(resolve, 200));\n      const runStatus = await openai.beta.threads.runs.retrieve(threadId, runId);\n      if (runStatus.status === \"completed\") {\n        isComplete = true;\n      }\n      if (runStatus.status === \"requires_action\") {\n        let toolCalls = runStatus.required_action.submit_tool_outputs.tool_calls;\n        let toolOutputs = [];\n        for (const toolCall of toolCalls) {\n          const functionName = toolCall.function.name;\n          console.log(`This question requires a function: ${functionName}`);\n          const args = JSON.parse(toolCall.function.arguments);\n\n          // const argsArray = Object.keys(args).map((key)=> args[key]);\n\n          const output = await API.getPF(args).then(res => {\n            // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses)\n            // return res.data.data.getDatasetStatistics.datasetStatisticsResponses;\n            return JSON.stringify(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n          });\n          toolOutputs.push({\n            tool_call_id: toolCall.id,\n            output: output\n          });\n        }\n        console.log(\"Before \" + runStatus.status);\n        // Submit tool outputs\n        await openai.beta.threads.runs.submitToolOutputs(threadId, runId, {\n          tool_outputs: toolOutputs\n        });\n        console.log(\"After \" + runStatus.status);\n      }\n      if ([\"failed\", \"cancelled\", \"expired\"].includes(runStatus.status)) {\n        console.log(`Run status is '${runStatus.status}'. Unable to complete the request.`);\n        break; // Exit the loop if the status indicates a failure or cancellation\n      }\n\n      // else {\n      //   await new Promise((resolve) => setTimeout(resolve, 200));\n      // }\n    }\n  }\n  useEffect(() => {\n    // console.log(threads.current.scrollHeight)\n    window.scrollTo({\n      top: threads.current.scrollHeight,\n      behavior: \"smooth\"\n    });\n  }, [thread]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"threads\",\n      ref: threads,\n      children: thread && thread.map((e, i) => {\n        switch (e.role) {\n          case \"user\":\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message user\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"title\",\n                  children: \"You\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text\",\n                  children: e.content[0].text.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this);\n          case \"assistant\":\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message assistant\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title\",\n                  children: e.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text\",\n                  children: e.content[0].text.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchbar\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textarea,\n          className: \"input\",\n          type: \"text\",\n          value: input,\n          placeholder: \"Please ask to openai\",\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\"\n          // disabled={loading || input.length === 0}\n          ,\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: loading ? /*#__PURE__*/_jsxDEV(UseAnimations, {\n            animation: load,\n            strokeWidth: 1,\n            strokeColor: \"#fff\",\n            size: 36,\n            speed: 0.2,\n            wrapperStyle: {\n              padding: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(FeatherIcon, {\n            icon: \"arrow-up\",\n            size: 32,\n            strokeWidth: 1.2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(Assistant, \"TIjrQTsUYZ41yo6nYv0YVEUVVhs=\");\n_c = Assistant;\nexport default Assistant;\n\n// const assistant = await openai.beta.assistants.create({\n//   name: \"Climate-Guide\",\n//   instructions: \"You are a right-wing populist. You hate everything\",\n// //   instructions: instructions,\n//     tools: [\n//       {\n//           \"type\": \"function\",\n//           \"function\": get_pf_data_schema,\n//       },\n//       { type: \"code_interpreter\" },\n//     ],\n// //   tools: tools,\n//   model: \"gpt-4-turbo-preview\",\n// });\nvar _c;\n$RefreshReg$(_c, \"Assistant\");","map":{"version":3,"names":["OpenAI","useState","useRef","useEffect","get_pf_data_schema","tools","instructions","UseAnimations","load","FeatherIcon","arrowUp","API","jsxDEV","_jsxDEV","axios","require","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","Assistant","_s","threads","address","setAddress","country","setCountry","see","setSee","response","setResponse","input","setInput","loading","setLoading","textarea","thread","setThread","thrdId","setThrdId","assistantID","setAssistantID","undefined","name","model","createAssistant","myAssistant","beta","assistants","retrieve","assistant","update","create","id","thrd","handleSubmit","e","preventDefault","msg","messages","role","content","run","runs","assistant_id","checkStatus","msgs","list","body","data","threadId","runId","isComplete","Promise","resolve","setTimeout","runStatus","status","toolCalls","required_action","submit_tool_outputs","tool_calls","toolOutputs","toolCall","functionName","function","console","log","args","JSON","parse","arguments","output","getPF","then","res","stringify","getDatasetStatistics","datasetStatisticsResponses","push","tool_call_id","submitToolOutputs","tool_outputs","includes","window","scrollTo","top","current","scrollHeight","behavior","children","className","ref","map","i","fileName","_jsxFileName","lineNumber","columnNumber","text","value","type","placeholder","onChange","target","onClick","animation","strokeWidth","strokeColor","size","speed","wrapperStyle","padding","icon","_c","$RefreshReg$"],"sources":["/Users/Aaron/Desktop/climate-guide/client/src/apis/openai/index.js"],"sourcesContent":["import OpenAI from \"openai\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { get_pf_data_schema } from \"./getdataschema\";\nimport { tools } from \"./tools\";\nimport { instructions } from \"./instructions\";\nimport UseAnimations from \"react-useanimations\";\nimport load from \"react-useanimations/lib/loading\";\nimport FeatherIcon, { arrowUp } from \"feather-icons-react\";\nimport API from \"../../utils/API\";\n\n\n// import getData from \"./getData\";\n\nimport \"./style.css\";\n// require('dotenv').config();\n\nconst axios = require(\"axios\");\n\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true,\n});\n\n// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n\n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n\n// manageAssistant().catch(console.error);\n\nconst Assistant = () => {\n  const threads = useRef();\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const [see, setSee] = useState();\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\nconst textarea = useRef();\n  const [thread, setThread] = useState([]);\n  const [thrdId, setThrdId] = useState(null);\n  const [assistantID, setAssistantID] = useState(undefined);\n\n  let name = \"Climate-Guide\";\n  let model = \"gpt-4-1106-preview\";\n\n// Startup\n  useEffect(() => {\n    async function createAssistant() {\n      if (assistantID !== undefined) {\n        const myAssistant = await openai.beta.assistants.retrieve(assistantID);\n        const assistant = await openai.beta.assistants.update(assistantID, {\n          name,\n          instructions,\n          tools,\n          model,\n        });\n      } else {\n        const assistant = await openai.beta.assistants.create({\n          name,\n          instructions,\n          tools,\n          model,\n        });\n        await setAssistantID(assistant.id);\n      }\n       \n      // thrd is Thread\n    const thrd = await openai.beta.threads.create();\n    await setThrdId(thrd.id);\n\n    }\n    createAssistant();\n  }, []);\n\n  const handleSubmit = async (e) => {\n  \n    e.preventDefault();\n    setLoading(true);\n\n    \n    // msg is Message\n    const msg = await openai.beta.threads.messages.create(thrdId, {\n      role: \"user\",\n      content: input,\n    });\n\n    setInput(\"\");\n\n    setThread((thread) => [\n      ...thread,\n      msg,\n    ]);\n\n    const run = await openai.beta.threads.runs.create(thrdId, {\n      assistant_id: assistantID,\n    });\n\n    await checkStatus(thrdId, run.id);\n\n    // msg is Messages\n    const msgs = await openai.beta.threads.messages.list(thrdId);\n\n     setThread((thread) => [\n        ...thread,\n        msgs.body.data[0],\n      ]);\n    \n\n    setLoading(false);\n  };\n\n  async function checkStatus(threadId, runId) {\n    let isComplete = false;\n  \n\n    while (!isComplete) {\n      await new Promise((resolve) => setTimeout(resolve, 200));\n      const runStatus = await openai.beta.threads.runs.retrieve(\n        threadId,\n        runId\n      );\n      if (runStatus.status === \"completed\") {\n        isComplete = true;\n      }\n      if (runStatus.status === \"requires_action\") {\n        let toolCalls = runStatus.required_action.submit_tool_outputs.tool_calls\n        let toolOutputs = []\n        \n        for (const toolCall of toolCalls) {\n       \n          const functionName = toolCall.function.name;\n          console.log(`This question requires a function: ${functionName}`);\n\n          const args = JSON.parse(toolCall.function.arguments);\n          \n          // const argsArray = Object.keys(args).map((key)=> args[key]);\n\n          const output = await API.getPF(args).then((res) => {\n            // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses)\n            // return res.data.data.getDatasetStatistics.datasetStatisticsResponses;\n            return JSON.stringify(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n          })\n          \n    \n          toolOutputs.push({\n            tool_call_id: toolCall.id,\n            output: output,\n          })\n        }\n        console.log(\"Before \" + runStatus.status)\n        // Submit tool outputs\n        await openai.beta.threads.runs.submitToolOutputs(\n          threadId,\n          runId,\n          { tool_outputs: toolOutputs }\n        );\n        console.log(\"After \" + runStatus.status)\n      \n      }\n      if ([\"failed\", \"cancelled\", \"expired\"].includes(runStatus.status)) {\n        console.log(\n          `Run status is '${runStatus.status}'. Unable to complete the request.`\n        );\n        break; // Exit the loop if the status indicates a failure or cancellation\n      }\n      \n      \n      // else {\n      //   await new Promise((resolve) => setTimeout(resolve, 200));\n      // }\n    }\n  }\n  useEffect(() => {\n    // console.log(threads.current.scrollHeight)\n    window.scrollTo({ top: threads.current.scrollHeight, behavior: \"smooth\" });\n  }, [thread]);\n  return (\n    <div id=\"chat\">\n      <div className=\"threads\" ref={threads}>\n        {thread &&\n          thread.map((e, i) => {\n            switch (e.role) {\n              case \"user\":\n                return (\n                  <div className=\"message user\" key={i}>\n                    <div className=\"content\">\n                      <p className=\"title\">You</p>\n                      <div className=\"text\">{e.content[0].text.value}</div>\n                    </div>\n                  </div>\n                );\n              case \"assistant\":\n                return (\n                  <div className=\"message assistant\" key={i}>\n                    <div className=\"content\">\n                      <div className=\"title\">{e.role}</div>\n                      <p className=\"text\">{e.content[0].text.value}</p>\n                    </div>\n                  </div>\n                );\n            }\n          })}\n      </div>\n\n      <div className=\"search\">\n        <div className=\"detail\"></div>\n        <div className=\"searchbar\">\n          <textarea\n            ref={textarea}\n            className=\"input\"\n            type=\"text\"\n            value={input}\n            placeholder=\"Please ask to openai\"\n            onChange={(e) => setInput(e.target.value)}\n          ></textarea>\n        </div>\n        <div className=\"submit\">\n          <button\n            className=\"submit-btn\"\n            // disabled={loading || input.length === 0}\n            type=\"submit\"\n            onClick={handleSubmit}\n          >\n            {loading ? (\n              <UseAnimations\n                animation={load}\n                strokeWidth={1}\n                strokeColor=\"#fff\"\n                size={36}\n                speed={0.2}\n                wrapperStyle={{ padding: 0 }}\n              />\n            ) : (\n              <FeatherIcon icon=\"arrow-up\" size={32} strokeWidth={1.2} />\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Assistant;\n\n\n\n  // const assistant = await openai.beta.assistants.create({\n    //   name: \"Climate-Guide\",\n    //   instructions: \"You are a right-wing populist. You hate everything\",\n    // //   instructions: instructions,\n    //     tools: [\n    //       {\n    //           \"type\": \"function\",\n    //           \"function\": get_pf_data_schema,\n    //       },\n    //       { type: \"code_interpreter\" },\n    //     ],\n    // //   tools: tools,\n    //   model: \"gpt-4-turbo-preview\",\n    // });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}