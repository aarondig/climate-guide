{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/Desktop/climate-guide/client/src/apis/openai/index.js\",\n  _s = $RefreshSig$();\nimport OpenAI from 'openai';\nimport { useState, useRef } from 'react';\nimport { get_pf_data_schema } from './getdata';\nimport tools from './tools';\nimport instructions from './instructions';\n// require('dotenv').config();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\n\n// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n\n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n\n// manageAssistant().catch(console.error);\n\nconst Assistant = () => {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const assistant = useRef();\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const thread = await openai.beta.threads.create();\n    const message = await openai.beta.threads.messages.create(thread.id, {\n      role: \"user\",\n      content: input\n    });\n    const threadMessages = await openai.beta.threads.messages.list(\"thread_abc123\", message);\n    console.log(threadMessages.data);\n    const assistant = await openai.beta.assistants.create({\n      name: \"Math Tutor\",\n      instructions: \"You are a personal math tutor. Write and run code to answer math questions.\",\n      tools: [\n      // {\n      //     \"type\": \"function\",\n      //     \"function\": get_pf_data_schema,\n      // },\n      {\n        \"type\": \"code_interpreter\"\n      }],\n      model: \"gpt-4-turbo-preview\"\n      // messages: thread\n    });\n    const run = await openai.beta.threads.runs.create(thread.id, {\n      assistant_id: assistant.id,\n      instructions: \"Please address the user as Jane Doe. The user has a premium account.\"\n    });\n    setResponse(threadMessages);\n    setInput(\"\");\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testbox\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        whiteSpace: \"wrap\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          width: \"80%\",\n          padding: \"20px\",\n          whiteSpace: \"wrap\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"API completion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), response, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: input,\n          placeholder: \"Please ask to openai\",\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading || input.length === 0,\n          type: \"submit\",\n          children: loading ? \"Generating...\" : \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"left\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Assistant, \"JECcrBdCemQu681QMeqaiVq90Tg=\");\n_c = Assistant;\nexport default Assistant;\nvar _c;\n$RefreshReg$(_c, \"Assistant\");","map":{"version":3,"names":["OpenAI","useState","useRef","get_pf_data_schema","tools","instructions","jsxDEV","_jsxDEV","Fragment","_Fragment","axios","require","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","Assistant","_s","address","setAddress","country","setCountry","assistant","response","setResponse","input","setInput","loading","setLoading","handleSubmit","e","preventDefault","thread","beta","threads","create","message","messages","id","role","content","threadMessages","list","console","log","data","assistants","name","model","run","runs","assistant_id","children","className","style","display","justifyContent","alignItems","width","whiteSpace","padding","fileName","_jsxFileName","lineNumber","columnNumber","position","height","onSubmit","type","value","placeholder","onChange","target","disabled","length","boxSizing","_c","$RefreshReg$"],"sources":["/Users/Aaron/Desktop/climate-guide/client/src/apis/openai/index.js"],"sourcesContent":["import OpenAI from 'openai';\nimport { useState, useRef } from 'react';\nimport {get_pf_data_schema} from './getdata';\nimport tools from './tools'\nimport instructions from './instructions'\n// require('dotenv').config();\n\nconst axios = require('axios');\n\n\nconst openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true\n  });\n\n\n\n\n \n\n\n// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n\n\n\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n    \n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n\n// manageAssistant().catch(console.error);\n\n\n\n\n\n\n\n\nconst Assistant = () => {\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const assistant = useRef();\n\n\n\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const thread = await openai.beta.threads.create();\n    const message = await openai.beta.threads.messages.create(\n        thread.id,\n        {\n          role: \"user\",\n          content: input\n        }\n      );\n\n    const threadMessages = await openai.beta.threads.messages.list(\n        \"thread_abc123\", message\n      );\n    \n      console.log(threadMessages.data);\n\n\n    const assistant = await openai.beta.assistants.create({\n        name: \"Math Tutor\",\n        instructions: \"You are a personal math tutor. Write and run code to answer math questions.\",\n        tools: [\n            // {\n            //     \"type\": \"function\",\n            //     \"function\": get_pf_data_schema,\n            // },\n            {\"type\": \"code_interpreter\"},\n        ],\n        model: \"gpt-4-turbo-preview\",\n        // messages: thread\n       \n      });\n\n\n          const run = await openai.beta.threads.runs.create(\n            thread.id,\n            { \n              assistant_id: assistant.id,\n              instructions: \"Please address the user as Jane Doe. The user has a premium account.\"\n            }\n          );\n\nsetResponse(threadMessages)\n \n\n    setInput(\"\");\n    setLoading(false);\n  };\n\n  return (\n    <>\n     <div className=\"testbox\"\n     style={{\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      whiteSpace: \"wrap\",\n\n    }}>\n        <pre style={{\n      width: \"80%\",\n      padding: \"20px\",\n      whiteSpace: \"wrap\",\n      \n    }}>\n            <strong>API completion:</strong>\n            {response} <br/>\n          </pre>\n          </div>\n      <div\n        style={{\n          position: \"absolute\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n\n\n        <form onSubmit={handleSubmit}>\n        \n          <textarea\n            type=\"text\"\n            value={input}\n            placeholder=\"Please ask to openai\"\n            onChange={(e) => setInput(e.target.value)}\n          ></textarea>\n          <button disabled={loading || input.length === 0} type=\"submit\">\n            {loading ? \"Generating...\" : \"Generate\"}\n          </button>\n        </form>\n      </div>\n      {response && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"left\",\n            boxSizing: \"border-box\",\n    \n          }}\n        >\n          \n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Assistant;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}