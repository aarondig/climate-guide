{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/Desktop/climate-guide/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport OpenAI from \"openai\";\n// import {getPFData} from './apis/probablefutures';\n\n// PROBABLE FUTURES API KEY = FQCzxCCBAh0wih1Yx0DFqheeldF0T6FD\n// PROBABLE FUTURES API PASSWORD = v6mbHDocvyWPM9pNYNBxvdZda1_yFq4DY_1QS5kVNWuGZGlDg4Lri89szt1KIe8W\n\nimport API from \"../src/utils/API\";\nimport Assistant from \"./apis/openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotApp = () => {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const handleclick = () => {\n    // console.log(API.getData())\n\n    API.getData({\n      address,\n      country\n    }).then(res => {\n      // console.log(res.data.getDataStatistics.getDataStatistics);\n      // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n    });\n  };\n  const openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true\n  });\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   setLoading(true);\n\n  //   const stream = await openai.chat.completions.create({\n  //     model: \"gpt-3.5-turbo\",\n  //     messages: [\n  //       { role: \"system\", content: \"you are a helpful assistant\" },\n  //       { role: \"user\", content: input },\n  //     ],\n\n  //     stream: true,\n  //   });\n  //   for await (const chunk of stream) {\n  //     console.log(chunk.choices[0]?.delta?.content || \"\");\n  //     setResponse((response) => [\n  //       ...response,\n  //       chunk.choices[0]?.delta?.content || \"\",\n  //     ]);\n  //   }\n\n  //   setInput(\"\");\n  //   setLoading(false);\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const stream = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: \"you are a helpful assistant\"\n      }, {\n        role: \"user\",\n        content: input\n      }],\n      stream: true\n    });\n    for await (const chunk of stream) {\n      var _chunk$choices$, _chunk$choices$$delta;\n      console.log(((_chunk$choices$ = chunk.choices[0]) === null || _chunk$choices$ === void 0 ? void 0 : (_chunk$choices$$delta = _chunk$choices$.delta) === null || _chunk$choices$$delta === void 0 ? void 0 : _chunk$choices$$delta.content) || \"\");\n      setResponse(response => {\n        var _chunk$choices$2, _chunk$choices$2$delt;\n        return [...response, ((_chunk$choices$2 = chunk.choices[0]) === null || _chunk$choices$2 === void 0 ? void 0 : (_chunk$choices$2$delt = _chunk$choices$2.delta) === null || _chunk$choices$2$delt === void 0 ? void 0 : _chunk$choices$2$delt.content) || \"\"];\n      });\n    }\n    setInput(\"\");\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Assistant, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this)\n  // <>\n  //  <div className=\"testbox\"\n  //  style={{\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  //   alignItems: \"center\",\n  //   width: \"100%\",\n  //   whiteSpace: \"wrap\",\n\n  // }}>\n  //     <pre style={{\n  //   width: \"80%\",\n  //   padding: \"20px\",\n  //   whiteSpace: \"wrap\",\n\n  // }}>\n  //         <strong>API completion:</strong>\n  //         {response} <br/>\n  //       </pre>\n  //       </div>\n  //   <div\n  //     style={{\n  //       position: \"absolute\",\n  //       display: \"flex\",\n  //       justifyContent: \"center\",\n  //       alignItems: \"center\",\n  //       height: \"100%\",\n  //       width: \"100%\",\n  //     }}\n  //   >\n\n  //     {/* <button onClick={()=>getPFData()}>HIT ME</button> */}\n  //     <textarea\n  //       type=\"text\"\n  //       value={country}\n  //       placeholder=\"Country\"\n  //       onChange={(e) => setCountry(e.target.value)}\n  //     ></textarea>\n  //     <button onClick={() => handleclick()}>HIT ME</button>\n\n  //     <form onSubmit={handleSubmit}>\n  //       {/* <form onSubmit={getPfData()}> */}\n  //       <textarea\n  //         type=\"text\"\n  //         value={input}\n  //         placeholder=\"Please ask to openai\"\n  //         onChange={(e) => setInput(e.target.value)}\n  //       ></textarea>\n  //       <button disabled={loading || input.length === 0} type=\"submit\">\n  //         {loading ? \"Generating...\" : \"Generate\"}\n  //       </button>\n  //     </form>\n  //   </div>\n  //   {response && (\n  //     <div\n  //       style={{\n  //         display: \"flex\",\n  //         justifyContent: \"left\",\n  //         boxSizing: \"border-box\",\n  //         // height:'20vh',\n  //         // background: \"black\",\n  //       }}\n  //     >\n\n  //     </div>\n  //   )}\n  // </>\n  ;\n};\n_s(ChatbotApp, \"WCs7zEFpEuOhNLmZ/bdEnLcDR5A=\");\n_c = ChatbotApp;\nexport default ChatbotApp;\nvar _c;\n$RefreshReg$(_c, \"ChatbotApp\");","map":{"version":3,"names":["useState","useEffect","OpenAI","API","Assistant","jsxDEV","_jsxDEV","ChatbotApp","_s","address","setAddress","country","setCountry","handleclick","getData","then","res","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","response","setResponse","input","setInput","loading","setLoading","handleSubmit","e","preventDefault","stream","chat","completions","create","model","messages","role","content","chunk","_chunk$choices$","_chunk$choices$$delta","console","log","choices","delta","_chunk$choices$2","_chunk$choices$2$delt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Aaron/Desktop/climate-guide/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport OpenAI from \"openai\";\n// import {getPFData} from './apis/probablefutures';\n\n// PROBABLE FUTURES API KEY = FQCzxCCBAh0wih1Yx0DFqheeldF0T6FD\n// PROBABLE FUTURES API PASSWORD = v6mbHDocvyWPM9pNYNBxvdZda1_yFq4DY_1QS5kVNWuGZGlDg4Lri89szt1KIe8W\n\nimport API from \"../src/utils/API\";\nimport Assistant from \"./apis/openai\";\n\nconst ChatbotApp = () => {\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n\n  const handleclick = () => {\n    // console.log(API.getData())\n\n    API.getData({ address, country }).then((res) => {\n      // console.log(res.data.getDataStatistics.getDataStatistics);\n      // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n    });\n  };\n\n  const openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true,\n  });\n\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   setLoading(true);\n\n  //   const stream = await openai.chat.completions.create({\n  //     model: \"gpt-3.5-turbo\",\n  //     messages: [\n  //       { role: \"system\", content: \"you are a helpful assistant\" },\n  //       { role: \"user\", content: input },\n  //     ],\n\n  //     stream: true,\n  //   });\n  //   for await (const chunk of stream) {\n  //     console.log(chunk.choices[0]?.delta?.content || \"\");\n  //     setResponse((response) => [\n  //       ...response,\n  //       chunk.choices[0]?.delta?.content || \"\",\n  //     ]);\n  //   }\n\n  //   setInput(\"\");\n  //   setLoading(false);\n  // };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const stream = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        { role: \"system\", content: \"you are a helpful assistant\" },\n        { role: \"user\", content: input },\n      ],\n\n      stream: true,\n    });\n    for await (const chunk of stream) {\n      console.log(chunk.choices[0]?.delta?.content || \"\");\n      setResponse((response) => [\n        ...response,\n        chunk.choices[0]?.delta?.content || \"\",\n      ]);\n    }\n\n    setInput(\"\");\n    setLoading(false);\n  };\n\n  return (\n    <Assistant/>\n    // <>\n    //  <div className=\"testbox\"\n    //  style={{\n    //   display: \"flex\",\n    //   justifyContent: \"center\",\n    //   alignItems: \"center\",\n    //   width: \"100%\",\n    //   whiteSpace: \"wrap\",\n\n    // }}>\n    //     <pre style={{\n    //   width: \"80%\",\n    //   padding: \"20px\",\n    //   whiteSpace: \"wrap\",\n      \n    // }}>\n    //         <strong>API completion:</strong>\n    //         {response} <br/>\n    //       </pre>\n    //       </div>\n    //   <div\n    //     style={{\n    //       position: \"absolute\",\n    //       display: \"flex\",\n    //       justifyContent: \"center\",\n    //       alignItems: \"center\",\n    //       height: \"100%\",\n    //       width: \"100%\",\n    //     }}\n    //   >\n       \n    //     {/* <button onClick={()=>getPFData()}>HIT ME</button> */}\n    //     <textarea\n    //       type=\"text\"\n    //       value={country}\n    //       placeholder=\"Country\"\n    //       onChange={(e) => setCountry(e.target.value)}\n    //     ></textarea>\n    //     <button onClick={() => handleclick()}>HIT ME</button>\n\n    //     <form onSubmit={handleSubmit}>\n    //       {/* <form onSubmit={getPfData()}> */}\n    //       <textarea\n    //         type=\"text\"\n    //         value={input}\n    //         placeholder=\"Please ask to openai\"\n    //         onChange={(e) => setInput(e.target.value)}\n    //       ></textarea>\n    //       <button disabled={loading || input.length === 0} type=\"submit\">\n    //         {loading ? \"Generating...\" : \"Generate\"}\n    //       </button>\n    //     </form>\n    //   </div>\n    //   {response && (\n    //     <div\n    //       style={{\n    //         display: \"flex\",\n    //         justifyContent: \"left\",\n    //         boxSizing: \"border-box\",\n    //         // height:'20vh',\n    //         // background: \"black\",\n    //       }}\n    //     >\n          \n    //     </div>\n    //   )}\n    // </>\n  );\n};\n\nexport default ChatbotApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}