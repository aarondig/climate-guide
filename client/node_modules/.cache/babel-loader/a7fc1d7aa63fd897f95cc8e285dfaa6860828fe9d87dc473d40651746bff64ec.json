{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/Desktop/climate-guide/client/src/App.js\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport OpenAI from \"openai\";\n// import {getPFData} from './apis/probablefutures';\n\n// PROBABLE FUTURES API KEY = FQCzxCCBAh0wih1Yx0DFqheeldF0T6FD\n// PROBABLE FUTURES API PASSWORD = v6mbHDocvyWPM9pNYNBxvdZda1_yFq4DY_1QS5kVNWuGZGlDg4Lri89szt1KIe8W\n\nimport API from \"../src/utils/API\";\nimport Assistant from \"./apis/openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotApp = () => {\n  // const [address, setAddress] = useState(\"\");\n  // const [country, setCountry] = useState();\n\n  // const handleclick = () => {\n  //   // console.log(API.getData())\n\n  //   API.getData({ address, country }).then((res) => {\n  //     // console.log(res.data.getDataStatistics.getDataStatistics);\n  //     // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n  //   });\n  // };\n\n  // const openai = new OpenAI({\n  //   apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  //   dangerouslyAllowBrowser: true,\n  // });\n\n  // const [response, setResponse] = useState([]);\n  // const [input, setInput] = useState(\"\");\n  // const [loading, setLoading] = useState(false);\n\n  // // const handleSubmit = async (e) => {\n  // //   e.preventDefault();\n  // //   setLoading(true);\n\n  // //   const stream = await openai.chat.completions.create({\n  // //     model: \"gpt-3.5-turbo\",\n  // //     messages: [\n  // //       { role: \"system\", content: \"you are a helpful assistant\" },\n  // //       { role: \"user\", content: input },\n  // //     ],\n\n  // //     stream: true,\n  // //   });\n  // //   for await (const chunk of stream) {\n  // //     console.log(chunk.choices[0]?.delta?.content || \"\");\n  // //     setResponse((response) => [\n  // //       ...response,\n  // //       chunk.choices[0]?.delta?.content || \"\",\n  // //     ]);\n  // //   }\n\n  // //   setInput(\"\");\n  // //   setLoading(false);\n  // // };\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   setLoading(true);\n\n  //   const stream = await openai.chat.completions.create({\n  //     model: \"gpt-3.5-turbo\",\n  //     messages: [\n  //       { role: \"system\", content: \"you are a helpful assistant\" },\n  //       { role: \"user\", content: input },\n  //     ],\n\n  //     stream: true,\n  //   });\n  //   for await (const chunk of stream) {\n  //     console.log(chunk.choices[0]?.delta?.content || \"\");\n  //     setResponse((response) => [\n  //       ...response,\n  //       chunk.choices[0]?.delta?.content || \"\",\n  //     ]);\n  //   }\n\n  //   setInput(\"\");\n  //   setLoading(false);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Assistant, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this)\n  // <>\n  //  <div className=\"testbox\"\n  //  style={{\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  //   alignItems: \"center\",\n  //   width: \"100%\",\n  //   whiteSpace: \"wrap\",\n\n  // }}>\n  //     <pre style={{\n  //   width: \"80%\",\n  //   padding: \"20px\",\n  //   whiteSpace: \"wrap\",\n\n  // }}>\n  //         <strong>API completion:</strong>\n  //         {response} <br/>\n  //       </pre>\n  //       </div>\n  //   <div\n  //     style={{\n  //       position: \"absolute\",\n  //       display: \"flex\",\n  //       justifyContent: \"center\",\n  //       alignItems: \"center\",\n  //       height: \"100%\",\n  //       width: \"100%\",\n  //     }}\n  //   >\n\n  //     {/* <button onClick={()=>getPFData()}>HIT ME</button> */}\n  //     <textarea\n  //       type=\"text\"\n  //       value={country}\n  //       placeholder=\"Country\"\n  //       onChange={(e) => setCountry(e.target.value)}\n  //     ></textarea>\n  //     <button onClick={() => handleclick()}>HIT ME</button>\n\n  //     <form onSubmit={handleSubmit}>\n  //       {/* <form onSubmit={getPfData()}> */}\n  //       <textarea\n  //         type=\"text\"\n  //         value={input}\n  //         placeholder=\"Please ask to openai\"\n  //         onChange={(e) => setInput(e.target.value)}\n  //       ></textarea>\n  //       <button disabled={loading || input.length === 0} type=\"submit\">\n  //         {loading ? \"Generating...\" : \"Generate\"}\n  //       </button>\n  //     </form>\n  //   </div>\n  //   {response && (\n  //     <div\n  //       style={{\n  //         display: \"flex\",\n  //         justifyContent: \"left\",\n  //         boxSizing: \"border-box\",\n  //         // height:'20vh',\n  //         // background: \"black\",\n  //       }}\n  //     >\n\n  //     </div>\n  //   )}\n  // </>\n  ;\n};\n_c = ChatbotApp;\nexport default ChatbotApp;\nvar _c;\n$RefreshReg$(_c, \"ChatbotApp\");","map":{"version":3,"names":["useState","useEffect","OpenAI","API","Assistant","jsxDEV","_jsxDEV","ChatbotApp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Aaron/Desktop/climate-guide/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport OpenAI from \"openai\";\n// import {getPFData} from './apis/probablefutures';\n\n// PROBABLE FUTURES API KEY = FQCzxCCBAh0wih1Yx0DFqheeldF0T6FD\n// PROBABLE FUTURES API PASSWORD = v6mbHDocvyWPM9pNYNBxvdZda1_yFq4DY_1QS5kVNWuGZGlDg4Lri89szt1KIe8W\n\nimport API from \"../src/utils/API\";\nimport Assistant from \"./apis/openai\";\n\nconst ChatbotApp = () => {\n  // const [address, setAddress] = useState(\"\");\n  // const [country, setCountry] = useState();\n\n  // const handleclick = () => {\n  //   // console.log(API.getData())\n\n  //   API.getData({ address, country }).then((res) => {\n  //     // console.log(res.data.getDataStatistics.getDataStatistics);\n  //     // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n  //   });\n  // };\n\n  // const openai = new OpenAI({\n  //   apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  //   dangerouslyAllowBrowser: true,\n  // });\n\n  // const [response, setResponse] = useState([]);\n  // const [input, setInput] = useState(\"\");\n  // const [loading, setLoading] = useState(false);\n\n  // // const handleSubmit = async (e) => {\n  // //   e.preventDefault();\n  // //   setLoading(true);\n\n  // //   const stream = await openai.chat.completions.create({\n  // //     model: \"gpt-3.5-turbo\",\n  // //     messages: [\n  // //       { role: \"system\", content: \"you are a helpful assistant\" },\n  // //       { role: \"user\", content: input },\n  // //     ],\n\n  // //     stream: true,\n  // //   });\n  // //   for await (const chunk of stream) {\n  // //     console.log(chunk.choices[0]?.delta?.content || \"\");\n  // //     setResponse((response) => [\n  // //       ...response,\n  // //       chunk.choices[0]?.delta?.content || \"\",\n  // //     ]);\n  // //   }\n\n  // //   setInput(\"\");\n  // //   setLoading(false);\n  // // };\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   setLoading(true);\n\n  //   const stream = await openai.chat.completions.create({\n  //     model: \"gpt-3.5-turbo\",\n  //     messages: [\n  //       { role: \"system\", content: \"you are a helpful assistant\" },\n  //       { role: \"user\", content: input },\n  //     ],\n\n  //     stream: true,\n  //   });\n  //   for await (const chunk of stream) {\n  //     console.log(chunk.choices[0]?.delta?.content || \"\");\n  //     setResponse((response) => [\n  //       ...response,\n  //       chunk.choices[0]?.delta?.content || \"\",\n  //     ]);\n  //   }\n\n  //   setInput(\"\");\n  //   setLoading(false);\n  // };\n\n\n  \n  return (\n    <Assistant/>\n    // <>\n    //  <div className=\"testbox\"\n    //  style={{\n    //   display: \"flex\",\n    //   justifyContent: \"center\",\n    //   alignItems: \"center\",\n    //   width: \"100%\",\n    //   whiteSpace: \"wrap\",\n\n    // }}>\n    //     <pre style={{\n    //   width: \"80%\",\n    //   padding: \"20px\",\n    //   whiteSpace: \"wrap\",\n      \n    // }}>\n    //         <strong>API completion:</strong>\n    //         {response} <br/>\n    //       </pre>\n    //       </div>\n    //   <div\n    //     style={{\n    //       position: \"absolute\",\n    //       display: \"flex\",\n    //       justifyContent: \"center\",\n    //       alignItems: \"center\",\n    //       height: \"100%\",\n    //       width: \"100%\",\n    //     }}\n    //   >\n       \n    //     {/* <button onClick={()=>getPFData()}>HIT ME</button> */}\n    //     <textarea\n    //       type=\"text\"\n    //       value={country}\n    //       placeholder=\"Country\"\n    //       onChange={(e) => setCountry(e.target.value)}\n    //     ></textarea>\n    //     <button onClick={() => handleclick()}>HIT ME</button>\n\n    //     <form onSubmit={handleSubmit}>\n    //       {/* <form onSubmit={getPfData()}> */}\n    //       <textarea\n    //         type=\"text\"\n    //         value={input}\n    //         placeholder=\"Please ask to openai\"\n    //         onChange={(e) => setInput(e.target.value)}\n    //       ></textarea>\n    //       <button disabled={loading || input.length === 0} type=\"submit\">\n    //         {loading ? \"Generating...\" : \"Generate\"}\n    //       </button>\n    //     </form>\n    //   </div>\n    //   {response && (\n    //     <div\n    //       style={{\n    //         display: \"flex\",\n    //         justifyContent: \"left\",\n    //         boxSizing: \"border-box\",\n    //         // height:'20vh',\n    //         // background: \"black\",\n    //       }}\n    //     >\n          \n    //     </div>\n    //   )}\n    // </>\n  );\n};\n\nexport default ChatbotApp;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,QAAQ;AAC3B;;AAEA;AACA;;AAEA,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAIA,oBACED,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EAAA;AAEJ,CAAC;AAACC,EAAA,GAhJIL,UAAU;AAkJhB,eAAeA,UAAU;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}