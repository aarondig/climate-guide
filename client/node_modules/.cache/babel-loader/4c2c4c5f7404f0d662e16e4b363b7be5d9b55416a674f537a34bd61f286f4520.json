{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/Desktop/climate-guide/client/src/apis/openai/index.js\",\n  _s = $RefreshSig$();\nimport OpenAI from 'openai';\nimport { useState, useRef, useEffect } from 'react';\nimport { get_pf_data_schema } from './getdata';\nimport tools from './tools';\nimport instructions from './instructions';\nimport \"./style.css\";\n// require('dotenv').config();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\n\n// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n\n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n\n// manageAssistant().catch(console.error);\n\nconst Assistant = () => {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const assistant = await openai.beta.assistants.create({\n      name: \"Math Tutor\",\n      instructions: \"You are a personal math tutor. Write and run code to answer math questions.\",\n      tools: [\n      // {\n      //     \"type\": \"function\",\n      //     \"function\": get_pf_data_schema,\n      // },\n      {\n        \"type\": \"code_interpreter\"\n      }],\n      model: \"gpt-4-turbo-preview\"\n      // messages: thread\n    });\n    const thread = await openai.beta.threads.create();\n    const message = await openai.beta.threads.messages.create(thread.id, {\n      role: \"user\",\n      content: input\n    });\n    const run = await openai.beta.threads.runs.create(thread.id, {\n      assistant_id: assistant.id,\n      instructions: \"Please address the user as Jane Doe. The user has a premium account.\"\n    });\n    await checkStatus(thread.id, run.id);\n    const messages = await openai.beta.threads.messages.list(thread.id);\n    setResponse(messages.body.data[0].content[0].text.value);\n    console.log(messages);\n    setInput(\"\");\n    setLoading(false);\n  };\n  async function checkStatus(threadId, runId) {\n    let isComplete = false;\n    while (!isComplete) {\n      const runStatus = await openai.beta.threads.runs.retrieve(threadId, runId);\n      if (runStatus.status === 'completed') {\n        isComplete = true;\n      } else {\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"API completion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), response, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testbox\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        whiteSpace: \"wrap\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          width: \"80%\",\n          padding: \"20px\",\n          whiteSpace: \"wrap\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"API completion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), response, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: input,\n        placeholder: \"Please ask to openai\",\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: loading || input.length === 0,\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: loading ? \"Generating...\" : \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"left\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(Assistant, \"WCs7zEFpEuOhNLmZ/bdEnLcDR5A=\");\n_c = Assistant;\nexport default Assistant;\nvar _c;\n$RefreshReg$(_c, \"Assistant\");","map":{"version":3,"names":["OpenAI","useState","useRef","useEffect","get_pf_data_schema","tools","instructions","jsxDEV","_jsxDEV","axios","require","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","Assistant","_s","address","setAddress","country","setCountry","response","setResponse","input","setInput","loading","setLoading","handleSubmit","e","preventDefault","assistant","beta","assistants","create","name","model","thread","threads","message","messages","id","role","content","run","runs","assistant_id","checkStatus","list","body","data","text","value","console","log","threadId","runId","isComplete","runStatus","retrieve","status","Promise","resolve","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","width","whiteSpace","padding","position","height","type","placeholder","onChange","target","disabled","length","onClick","boxSizing","_c","$RefreshReg$"],"sources":["/Users/Aaron/Desktop/climate-guide/client/src/apis/openai/index.js"],"sourcesContent":["import OpenAI from 'openai';\nimport { useState, useRef, useEffect } from 'react';\nimport {get_pf_data_schema} from './getdata';\nimport tools from './tools'\nimport instructions from './instructions'\nimport \"./style.css\";\n// require('dotenv').config();\n\nconst axios = require('axios');\n\n\nconst openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true\n  });\n\n\n\n\n \n\n\n// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n\n\n\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n    \n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n\n// manageAssistant().catch(console.error);\n\n\n\n\n\n\n\nconst Assistant = () => {\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n\n\n\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n\n    const assistant = await openai.beta.assistants.create({\n        name: \"Math Tutor\",\n        instructions: \"You are a personal math tutor. Write and run code to answer math questions.\",\n        tools: [\n            // {\n            //     \"type\": \"function\",\n            //     \"function\": get_pf_data_schema,\n            // },\n            {\"type\": \"code_interpreter\"},\n        ],\n        model: \"gpt-4-turbo-preview\",\n        // messages: thread\n       \n      });\n      const thread = await openai.beta.threads.create();\n\n    const message = await openai.beta.threads.messages.create(\n    thread.id,\n    {\n      role: \"user\",\n      content: input\n    }\n  );\n  const run = await openai.beta.threads.runs.create(\n    thread.id,\n    { \n      assistant_id: assistant.id,\n      instructions: \"Please address the user as Jane Doe. The user has a premium account.\"\n    }\n  );\n  await checkStatus(thread.id, run.id)\n  const messages = await openai.beta.threads.messages.list(\n    thread.id\n  );\n\n  setResponse(messages.body.data[0].content[0].text.value)\n  console.log(messages)\n    setInput(\"\");\n    setLoading(false);\n  };\n\nasync function checkStatus(threadId, runId) {\nlet isComplete = false;\nwhile(!isComplete) {\n    const runStatus = await openai.beta.threads.runs.retrieve(\n        threadId,\n        runId\n      );\n      if (runStatus.status === 'completed') {\n        isComplete = true;\n      } else {\n        await new Promise((resolve)=> setTimeout(resolve, 2000))\n      }\n}\n}\n  \n\n  return (\n    <div id=\"chat\">\n <div className=\"text-container\">\n   {/* {messages.map(()=>{\n    return (<div className=\"message\">\n    <div className='content'>\n        <h3 className='title'>\n            Assistant\n        </h3>\n        <p className='text'>\n            Assistant\n        </p>\n    </div>\n\n</div>\n\n    )\n   })} */}\n   \n    \n            <strong>API completion:</strong>\n            {response} <br/>\n       \n          </div>\n\n     <div className=\"testbox\"\n     style={{\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      whiteSpace: \"wrap\",\n\n    }}>\n        <pre style={{\n      width: \"80%\",\n      padding: \"20px\",\n      whiteSpace: \"wrap\",\n      \n    }}>\n            <strong>API completion:</strong>\n            {response} <br/>\n          </pre>\n          </div>\n      <div\n        style={{\n          position: \"absolute\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n\n\n      \n        \n          <textarea\n            type=\"text\"\n            value={input}\n            placeholder=\"Please ask to openai\"\n            onChange={(e) => setInput(e.target.value)}\n          ></textarea>\n          <button disabled={loading || input.length === 0} type=\"submit\" onClick={handleSubmit}>\n            {loading ? \"Generating...\" : \"Generate\"}\n          </button>\n    \n      </div>\n      {response && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"left\",\n            boxSizing: \"border-box\",\n    \n          }}\n        >\n          \n        </div>\n      )}\n   </div>\n  );\n};\n\nexport default Assistant;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}