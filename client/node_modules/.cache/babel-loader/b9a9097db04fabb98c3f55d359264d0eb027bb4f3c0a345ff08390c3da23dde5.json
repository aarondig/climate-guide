{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/Desktop/climate-guide/client/src/apis/openai/index.js\",\n  _s = $RefreshSig$();\nimport OpenAI from 'openai';\nimport { useState, useRef, useEffect } from 'react';\nimport { get_pf_data_schema } from './getdata';\nimport tools from './tools';\nimport instructions from './instructions';\n// require('dotenv').config();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\n\n// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n\n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n\n// manageAssistant().catch(console.error);\n\nconst Assistant = () => {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const assistant = useRef();\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    // const thread = await openai.beta.threads.create();\n    // const message = await openai.beta.threads.messages.create(\n    //     thread.id,\n    //     {\n    //       role: \"user\",\n    //       content: input\n    //     }\n    //   );\n\n    // const threadMessages = await openai.beta.threads.messages.list(\n    //     \"thread_abc123\", message\n    //   );\n\n    //   console.log(threadMessages.data);\n\n    const assistant = await openai.beta.assistants.create({\n      name: \"Math Tutor\",\n      instructions: \"You are a personal math tutor. Write and run code to answer math questions.\",\n      tools: [\n      // {\n      //     \"type\": \"function\",\n      //     \"function\": get_pf_data_schema,\n      // },\n      {\n        \"type\": \"code_interpreter\"\n      }],\n      model: \"gpt-4-turbo-preview\"\n      // messages: thread\n    });\n    const thread = await openai.beta.threads.create();\n    const message = await openai.beta.threads.messages.create(thread.id, {\n      role: \"user\",\n      content: \"I need to solve the equation `3x + 11 = 14`. Can you help me?\"\n    });\n    const run = await openai.beta.threads.runs.create(thread.id, {\n      assistant_id: assistant.id,\n      instructions: \"Please address the user as Jane Doe. The user has a premium account.\"\n    });\n    await checkStatus(thread.id, run.id);\n    setInput(\"\");\n    setLoading(false);\n  };\n  async function checkStatus(threadId, runId) {\n    let isComplete = false;\n    while (!isComplete) {\n      const runStatus = await openai.beta.threads.runs.retrieve(threadId, runId);\n      if (runStatus.status === 'completed') {\n        isComplete = true;\n      } else {\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      }\n    }\n  }\n\n  // useEffect(()=>{\n  // handleSubmit();\n  // },[])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testbox\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        whiteSpace: \"wrap\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          width: \"80%\",\n          padding: \"20px\",\n          whiteSpace: \"wrap\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"API completion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), response, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: input,\n          placeholder: \"Please ask to openai\",\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading || input.length === 0,\n          type: \"submit\",\n          children: loading ? \"Generating...\" : \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"left\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Assistant, \"JECcrBdCemQu681QMeqaiVq90Tg=\");\n_c = Assistant;\nexport default Assistant;\nvar _c;\n$RefreshReg$(_c, \"Assistant\");","map":{"version":3,"names":["OpenAI","useState","useRef","useEffect","get_pf_data_schema","tools","instructions","jsxDEV","_jsxDEV","Fragment","_Fragment","axios","require","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","Assistant","_s","address","setAddress","country","setCountry","assistant","response","setResponse","input","setInput","loading","setLoading","handleSubmit","e","preventDefault","beta","assistants","create","name","model","thread","threads","message","messages","id","role","content","run","runs","assistant_id","checkStatus","threadId","runId","isComplete","runStatus","retrieve","status","Promise","resolve","setTimeout","children","className","style","display","justifyContent","alignItems","width","whiteSpace","padding","fileName","_jsxFileName","lineNumber","columnNumber","position","height","onSubmit","type","value","placeholder","onChange","target","disabled","length","boxSizing","_c","$RefreshReg$"],"sources":["/Users/Aaron/Desktop/climate-guide/client/src/apis/openai/index.js"],"sourcesContent":["import OpenAI from 'openai';\nimport { useState, useRef, useEffect } from 'react';\nimport {get_pf_data_schema} from './getdata';\nimport tools from './tools'\nimport instructions from './instructions'\n// require('dotenv').config();\n\nconst axios = require('axios');\n\n\nconst openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true\n  });\n\n\n\n\n \n\n\n// const assistantId = process.env.ASSISTANT_ID;\n// const model = \"gpt-3.5-turbo\";\n\n\n\n// async function manageAssistant() {\n//   try {\n//     // Attempt to retrieve the assistant to check if it exists\n//     const existingAssistant = await openai.retrieveAssistant({\n//       assistant_id: assistantId,\n//     });\n\n//     console.log(\"Updating existing assistant ...\");\n//     // Update the assistant if it exists\n//     const updatedAssistant = await openai.updateAssistant({\n//       assistant_id: assistantId,\n//       name: \"Climate Change Assistant\",\n//       model,\n//       // Additional properties like `instructions` and `tools` can be modified here if the API supports it\n//     });\n//     console.log(updatedAssistant.data);\n    \n//   } catch (error) {\n//     if (error.response && error.response.status === 404) {\n//       console.log(\"Creating assistant ...\");\n//       // Create a new assistant if it doesn't exist\n//       const newAssistant = await openai.createAssistant({\n//         name: \"Climate Change Assistant\",\n//         model,\n//         // The current API may not directly support `instructions` and `tools` in this manner; adjust accordingly\n//       });\n//       console.log(newAssistant.data);\n//       console.log(\"Now save the ID in your .env file\");\n//     } else {\n//       console.error(\"An error occurred:\", error.message);\n//     }\n//   }\n// }\n\n// manageAssistant().catch(console.error);\n\n\n\n\n\n\n\nconst Assistant = () => {\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const assistant = useRef();\n\n\n\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    // const thread = await openai.beta.threads.create();\n    // const message = await openai.beta.threads.messages.create(\n    //     thread.id,\n    //     {\n    //       role: \"user\",\n    //       content: input\n    //     }\n    //   );\n\n    // const threadMessages = await openai.beta.threads.messages.list(\n    //     \"thread_abc123\", message\n    //   );\n    \n    //   console.log(threadMessages.data);\n\n\n    const assistant = await openai.beta.assistants.create({\n        name: \"Math Tutor\",\n        instructions: \"You are a personal math tutor. Write and run code to answer math questions.\",\n        tools: [\n            // {\n            //     \"type\": \"function\",\n            //     \"function\": get_pf_data_schema,\n            // },\n            {\"type\": \"code_interpreter\"},\n        ],\n        model: \"gpt-4-turbo-preview\",\n        // messages: thread\n       \n      });\n      const thread = await openai.beta.threads.create();\n\nconst message = await openai.beta.threads.messages.create(\n    thread.id,\n    {\n      role: \"user\",\n      content: \"I need to solve the equation `3x + 11 = 14`. Can you help me?\"\n    }\n  );\n  const run = await openai.beta.threads.runs.create(\n    thread.id,\n    { \n      assistant_id: assistant.id,\n      instructions: \"Please address the user as Jane Doe. The user has a premium account.\"\n    }\n  );\n  await checkStatus(thread.id, run.id)\n\n    setInput(\"\");\n    setLoading(false);\n  };\nasync function checkStatus(threadId, runId) {\nlet isComplete = false;\nwhile(!isComplete) {\n    const runStatus = await openai.beta.threads.runs.retrieve(\n        threadId,\n        runId\n      );\n      if (runStatus.status === 'completed') {\n        isComplete = true;\n      } else {\n        await new Promise((resolve)=> setTimeout(resolve, 2000))\n      }\n}\n}\n\n\n// useEffect(()=>{\n// handleSubmit();\n// },[])\n  \n\n  return (\n    <>\n     <div className=\"testbox\"\n     style={{\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      whiteSpace: \"wrap\",\n\n    }}>\n        <pre style={{\n      width: \"80%\",\n      padding: \"20px\",\n      whiteSpace: \"wrap\",\n      \n    }}>\n            <strong>API completion:</strong>\n            {response} <br/>\n          </pre>\n          </div>\n      <div\n        style={{\n          position: \"absolute\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n\n\n        <form onSubmit={handleSubmit}>\n        \n          <textarea\n            type=\"text\"\n            value={input}\n            placeholder=\"Please ask to openai\"\n            onChange={(e) => setInput(e.target.value)}\n          ></textarea>\n          <button disabled={loading || input.length === 0} type=\"submit\">\n            {loading ? \"Generating...\" : \"Generate\"}\n          </button>\n        </form>\n      </div>\n      {response && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"left\",\n            boxSizing: \"border-box\",\n    \n          }}\n        >\n          \n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Assistant;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}