{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/Desktop/climate-guide/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport OpenAI from \"openai\";\n// import {getPFData} from './apis/probablefutures';\n\n// PROBABLE FUTURES API KEY = FQCzxCCBAh0wih1Yx0DFqheeldF0T6FD\n// PROBABLE FUTURES API PASSWORD = v6mbHDocvyWPM9pNYNBxvdZda1_yFq4DY_1QS5kVNWuGZGlDg4Lri89szt1KIe8W\n\nimport API from \"../src/utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatbotApp = () => {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n  const handleclick = () => {\n    // console.log(API.getData())\n\n    API.getData({\n      address,\n      country\n    }).then(res => {\n      // console.log(res.data.getDataStatistics.getDataStatistics);\n      // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n    });\n  };\n  const openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true\n  });\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   setLoading(true);\n\n  //   const stream = await openai.chat.completions.create({\n  //     model: \"gpt-3.5-turbo\",\n  //     messages: [\n  //       { role: \"system\", content: \"you are a helpful assistant\" },\n  //       { role: \"user\", content: input },\n  //     ],\n\n  //     stream: true,\n  //   });\n  //   for await (const chunk of stream) {\n  //     console.log(chunk.choices[0]?.delta?.content || \"\");\n  //     setResponse((response) => [\n  //       ...response,\n  //       chunk.choices[0]?.delta?.content || \"\",\n  //     ]);\n  //   }\n\n  //   setInput(\"\");\n  //   setLoading(false);\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const stream = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: \"you are a helpful assistant\"\n      }, {\n        role: \"user\",\n        content: input\n      }],\n      stream: true\n    });\n    for await (const chunk of stream) {\n      var _chunk$choices$, _chunk$choices$$delta;\n      console.log(((_chunk$choices$ = chunk.choices[0]) === null || _chunk$choices$ === void 0 ? void 0 : (_chunk$choices$$delta = _chunk$choices$.delta) === null || _chunk$choices$$delta === void 0 ? void 0 : _chunk$choices$$delta.content) || \"\");\n      setResponse(response => {\n        var _chunk$choices$2, _chunk$choices$2$delt;\n        return [...response, ((_chunk$choices$2 = chunk.choices[0]) === null || _chunk$choices$2 === void 0 ? void 0 : (_chunk$choices$2$delt = _chunk$choices$2.delta) === null || _chunk$choices$2$delt === void 0 ? void 0 : _chunk$choices$2$delt.content) || \"\"];\n      });\n    }\n    setInput(\"\");\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        // alignItems: \"center\",\n        height: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testbox\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"API completion:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), response]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: country,\n        placeholder: \"Country\",\n        onChange: e => setCountry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleclick(),\n        children: \"HIT ME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: input,\n          placeholder: \"Please ask to openai\",\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading || input.length === 0,\n          type: \"submit\",\n          children: loading ? \"Generating...\" : \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"left\",\n        boxSizing: \"border-box\"\n        // height:'20vh',\n        // background: \"black\",\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatbotApp, \"WCs7zEFpEuOhNLmZ/bdEnLcDR5A=\");\n_c = ChatbotApp;\nexport default ChatbotApp;\nvar _c;\n$RefreshReg$(_c, \"ChatbotApp\");","map":{"version":3,"names":["useState","useEffect","OpenAI","API","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotApp","_s","address","setAddress","country","setCountry","handleclick","getData","then","res","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","response","setResponse","input","setInput","loading","setLoading","handleSubmit","e","preventDefault","stream","chat","completions","create","model","messages","role","content","chunk","_chunk$choices$","_chunk$choices$$delta","console","log","choices","delta","_chunk$choices$2","_chunk$choices$2$delt","children","style","display","justifyContent","height","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","target","onClick","onSubmit","disabled","length","boxSizing","_c","$RefreshReg$"],"sources":["/Users/Aaron/Desktop/climate-guide/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport OpenAI from \"openai\";\n// import {getPFData} from './apis/probablefutures';\n\n// PROBABLE FUTURES API KEY = FQCzxCCBAh0wih1Yx0DFqheeldF0T6FD\n// PROBABLE FUTURES API PASSWORD = v6mbHDocvyWPM9pNYNBxvdZda1_yFq4DY_1QS5kVNWuGZGlDg4Lri89szt1KIe8W\n\nimport API from \"../src/utils/API\";\n\nconst ChatbotApp = () => {\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState();\n\n  const handleclick = () => {\n    // console.log(API.getData())\n\n    API.getData({ address, country }).then((res) => {\n      // console.log(res.data.getDataStatistics.getDataStatistics);\n      // console.log(res.data.data.getDatasetStatistics.datasetStatisticsResponses);\n    });\n  };\n\n  const openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true,\n  });\n\n  const [response, setResponse] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   setLoading(true);\n\n  //   const stream = await openai.chat.completions.create({\n  //     model: \"gpt-3.5-turbo\",\n  //     messages: [\n  //       { role: \"system\", content: \"you are a helpful assistant\" },\n  //       { role: \"user\", content: input },\n  //     ],\n\n  //     stream: true,\n  //   });\n  //   for await (const chunk of stream) {\n  //     console.log(chunk.choices[0]?.delta?.content || \"\");\n  //     setResponse((response) => [\n  //       ...response,\n  //       chunk.choices[0]?.delta?.content || \"\",\n  //     ]);\n  //   }\n\n  //   setInput(\"\");\n  //   setLoading(false);\n  // };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const stream = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        { role: \"system\", content: \"you are a helpful assistant\" },\n        { role: \"user\", content: input },\n      ],\n\n      stream: true,\n    });\n    for await (const chunk of stream) {\n      console.log(chunk.choices[0]?.delta?.content || \"\");\n      setResponse((response) => [\n        ...response,\n        chunk.choices[0]?.delta?.content || \"\",\n      ]);\n    }\n\n    setInput(\"\");\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          // alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <div className=\"testbox\">\n        <pre>\n            <strong>API completion:</strong>\n            {response}\n          </pre>\n          </div>\n        {/* <button onClick={()=>getPFData()}>HIT ME</button> */}\n        <textarea\n          type=\"text\"\n          value={country}\n          placeholder=\"Country\"\n          onChange={(e) => setCountry(e.target.value)}\n        ></textarea>\n        <button onClick={() => handleclick()}>HIT ME</button>\n\n        <form onSubmit={handleSubmit}>\n          {/* <form onSubmit={getPfData()}> */}\n          <textarea\n            type=\"text\"\n            value={input}\n            placeholder=\"Please ask to openai\"\n            onChange={(e) => setInput(e.target.value)}\n          ></textarea>\n          <button disabled={loading || input.length === 0} type=\"submit\">\n            {loading ? \"Generating...\" : \"Generate\"}\n          </button>\n        </form>\n      </div>\n      {response && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"left\",\n            boxSizing: \"border-box\",\n            // height:'20vh',\n            // background: \"black\",\n          }}\n        >\n          \n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ChatbotApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}