{"ast":null,"code":"import{useState,useEffect}from\"react\";import'./App.css';import OpenAI from'openai';// import {getPFData} from './apis/probablefutures';\n// PROBABLE FUTURES API KEY = FQCzxCCBAh0wih1Yx0DFqheeldF0T6FD\n// PROBABLE FUTURES API PASSWORD = v6mbHDocvyWPM9pNYNBxvdZda1_yFq4DY_1QS5kVNWuGZGlDg4Lri89szt1KIe8W\nimport API from\"../src/utils/API\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const ChatbotApp=()=>{const handleclick=()=>{// console.log(API.getData())\nAPI.getData().then(res=>{console.log(res);});};// const makeAPICall = async () => {\n//   try {\n//     const response = await fetch('http://localhost:8080/', {mode:'cors'});\n//     const data = await response.json();\n//     console.log({ data })\n//   }\n//   catch (e) {\n//     console.log(e)\n//   }\n// }\n// useEffect(() => {\n//   makeAPICall();\n// }, [])\nconst openai=new OpenAI({apiKey:process.env.REACT_APP_OPENAI_API_KEY,dangerouslyAllowBrowser:true});const[response,setResponse]=useState([]);const[input,setInput]=useState('');const[loading,setLoading]=useState(false);const handleSubmit=async e=>{e.preventDefault();setLoading(true);const stream=await openai.chat.completions.create({model:\"gpt-3.5-turbo\",messages:[{\"role\":\"system\",\"content\":\"you are a helpful assistant\"},{role:'user',content:input}],stream:true});for await(const chunk of stream){var _chunk$choices$,_chunk$choices$$delta;console.log(((_chunk$choices$=chunk.choices[0])===null||_chunk$choices$===void 0?void 0:(_chunk$choices$$delta=_chunk$choices$.delta)===null||_chunk$choices$$delta===void 0?void 0:_chunk$choices$$delta.content)||\"\");setResponse(response=>{var _chunk$choices$2,_chunk$choices$2$delt;return[...response,((_chunk$choices$2=chunk.choices[0])===null||_chunk$choices$2===void 0?void 0:(_chunk$choices$2$delt=_chunk$choices$2.delta)===null||_chunk$choices$2$delt===void 0?void 0:_chunk$choices$2$delt.content)||\"\"];});}setInput('');setLoading(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:'100vh'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleclick(),children:\"HIT ME\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{type:\"text\",value:input,placeholder:\"Please ask to openai\",onChange:e=>setInput(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{disabled:loading||input.length===0,type:\"submit\",children:loading?\"Generating...\":\"Generate\"})]})]}),response&&/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"left\",boxSizing:\"border-box\"// height:'20vh',\n// background: \"black\",\n},children:/*#__PURE__*/_jsxs(\"pre\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"API completion:\"}),response]})})]});};export default ChatbotApp;","map":{"version":3,"names":["useState","useEffect","OpenAI","API","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatbotApp","handleclick","getData","then","res","console","log","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","response","setResponse","input","setInput","loading","setLoading","handleSubmit","e","preventDefault","stream","chat","completions","create","model","messages","role","content","chunk","_chunk$choices$","_chunk$choices$$delta","choices","delta","_chunk$choices$2","_chunk$choices$2$delt","children","style","display","justifyContent","alignItems","height","onClick","onSubmit","type","value","placeholder","onChange","target","disabled","length","boxSizing"],"sources":["/Users/Aaron/Desktop/climate-guide/client/src/App.js"],"sourcesContent":["\nimport { useState, useEffect } from \"react\"\nimport './App.css';\nimport OpenAI from 'openai';\n// import {getPFData} from './apis/probablefutures';\n\n// PROBABLE FUTURES API KEY = FQCzxCCBAh0wih1Yx0DFqheeldF0T6FD\n// PROBABLE FUTURES API PASSWORD = v6mbHDocvyWPM9pNYNBxvdZda1_yFq4DY_1QS5kVNWuGZGlDg4Lri89szt1KIe8W\n\nimport API from \"../src/utils/API\";\n\n\nconst ChatbotApp = () => {\n\n\n  const handleclick = () => {\n    // console.log(API.getData())\nAPI.getData().then(res => {\n\n  console.log(res);\n})\n  }\n\n  \n\n  // const makeAPICall = async () => {\n  //   try {\n  //     const response = await fetch('http://localhost:8080/', {mode:'cors'});\n  //     const data = await response.json();\n  //     console.log({ data })\n  //   }\n  //   catch (e) {\n  //     console.log(e)\n  //   }\n  // }\n  // useEffect(() => {\n  //   makeAPICall();\n  // }, [])\n\n\n\n  const openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true\n  });\n    const [response, setResponse] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n\n \n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  setLoading(true);\n\n  const stream = await openai.chat.completions.create({\n    model: \"gpt-3.5-turbo\",\n    messages: [{\"role\": \"system\", \"content\": \"you are a helpful assistant\"}, \n    { role: 'user', content: input }],\n\n    stream: true,\n  });\n  for await (const chunk of stream) {\n    console.log(chunk.choices[0]?.delta?.content || \"\");\n    setResponse(response => [...response, chunk.choices[0]?.delta?.content || \"\"])\n}\n\n  setInput('');\n  setLoading(false);\n}\n\n\n\n\n\n\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: '100vh',\n        }}\n      >\n        {/* <button onClick={()=>getPFData()}>HIT ME</button> */}\n        <button onClick={()=>handleclick()}>HIT ME</button>\n        <form onSubmit={handleSubmit}>\n        {/* <form onSubmit={getPfData()}> */}\n          <textarea\n            type=\"text\"\n            value={input}\n            placeholder=\"Please ask to openai\"\n            onChange={(e) => setInput(e.target.value)}\n          ></textarea>\n          <button\n            disabled={loading || input.length === 0}\n            type=\"submit\"\n          >\n            {loading ? \"Generating...\" : \"Generate\"}\n          </button>\n        </form>\n      </div>\n      {response && (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"left\",\n            boxSizing: \"border-box\",\n            // height:'20vh',\n            // background: \"black\",\n          }}\n        >\n          <pre>\n            <strong>API completion:</strong>\n            {response}\n          </pre>\n        </div>\n      )}\n    </>\n  );\n};\n\n\nexport default ChatbotApp;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}